{
    "swagger": "2.0",
    "info": {
        "description": "This is a simple blog project for practicing Go REST API.",
        "title": "REST API for Simple Blog Swagger Example",
        "contact": {},
        "version": "1.0"
    },
    "host": "localhost:8080",
    "basePath": "/",
    "paths": {
        "/api/comments": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "create comment",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "comments"
                ],
                "summary": "Create Comment",
                "operationId": "create-comment",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Post ID",
                        "name": "post_id",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "User ID",
                        "name": "user_id",
                        "in": "query",
                        "required": true
                    },
                    {
                        "description": "Comment credentials",
                        "name": "comment",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.UpdateCommentInput"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Comment successfully created. Returns the newly created comment id.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    "400": {
                        "description": "Invalid request or missing required fields.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Post or User with the specified ID does not exists.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "An unexpected error occurred on the server.",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/comments/all": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "get all comments",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "comments"
                ],
                "summary": "Get All Comments",
                "operationId": "get-all-comments",
                "responses": {
                    "200": {
                        "description": "Returns an array of comments.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Comment"
                            }
                        }
                    },
                    "500": {
                        "description": "An unexpected error occurred on the server.",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/comments/post": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "filter comments by post",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "comments"
                ],
                "summary": "Filter Comments by Post",
                "operationId": "filter-comments-by-post",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Post ID",
                        "name": "post_id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns an array of comments associated with the post.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Comment"
                            }
                        }
                    },
                    "404": {
                        "description": "Comment with specified post_id does not exist.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "An unexpected error occurred on the server.",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/comments/user": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "filter comments by user",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "comments"
                ],
                "summary": "Filter Comments by User",
                "operationId": "filter-comments-by-user",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "User ID",
                        "name": "user_id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns an array of comments created by the user.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Comment"
                            }
                        }
                    },
                    "404": {
                        "description": "Comment with specified user_id does not exist.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "An unexpected error occurred on the server.",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/comments/{id}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "get comment by ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "comments"
                ],
                "summary": "Get Comment By ID",
                "operationId": "get-comment-by-id",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Comment ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns the comment object.",
                        "schema": {
                            "$ref": "#/definitions/models.Comment"
                        }
                    },
                    "404": {
                        "description": "Comment with the specified ID does not exist.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "An unexpected error occurred on the server.",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "delete a comment by ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "comments"
                ],
                "summary": "Delete Comment",
                "operationId": "delete-comment",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Comment ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Comment successfully deleted.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Comment with the specified ID does not exist.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "An unexpected error occurred on the server.",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "patch": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "update an existing comment",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "comments"
                ],
                "summary": "Update Comment",
                "operationId": "update-comment",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Comment ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Comment data to update",
                        "name": "comment",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.UpdateCommentInput"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Comment successfully updated.",
                        "schema": {
                            "$ref": "#/definitions/models.UpdateCommentInput"
                        }
                    },
                    "400": {
                        "description": "Invalid request or missing required.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Comment with the specified ID does not exist.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "An unexpected error occurred on the server.",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/posts": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "filter posts by user ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "posts"
                ],
                "summary": "Filter Posts by User",
                "operationId": "filter-posts-by-user",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "User ID",
                        "name": "user_id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns an array of posts created by the user.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Post"
                            }
                        }
                    },
                    "404": {
                        "description": "Post with specified user_id does not exist.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "An unexpected error occurred on the server.",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "create post",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "posts"
                ],
                "summary": "Create Post",
                "operationId": "create-post",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "User ID",
                        "name": "user_id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Post successfully created. Returns the newly created post id.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    "400": {
                        "description": "Invalid request or missing required fields.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "An unexpected error occurred on the server.",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/posts/all": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "get all posts",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "posts"
                ],
                "summary": "Get All Posts",
                "operationId": "get-all-posts",
                "responses": {
                    "200": {
                        "description": "Returns an array of posts.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Post"
                            }
                        }
                    },
                    "500": {
                        "description": "An unexpected error occurred on the server.",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/posts/{id}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "get post by ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "posts"
                ],
                "summary": "Get Post By ID",
                "operationId": "get-post-by-id",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Post ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns the post object.",
                        "schema": {
                            "$ref": "#/definitions/models.Post"
                        }
                    },
                    "404": {
                        "description": "Post with the specified ID does not exist.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "An unexpected error occurred on the server.",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "delete a post by ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "posts"
                ],
                "summary": "Delete Post",
                "operationId": "delete-post",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Post ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Post successfully deleted.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Post with the specified ID does not exist.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "An unexpected error occurred on the server.",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "patch": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "update an existing post",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "posts"
                ],
                "summary": "Update Post",
                "operationId": "update-post",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Post ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Post data to update",
                        "name": "post",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.UpdatePostInput"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Post successfully updated.",
                        "schema": {
                            "$ref": "#/definitions/models.UpdatePostInput"
                        }
                    },
                    "400": {
                        "description": "Invalid request or missing required.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Post with the specified ID does not exist.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "An unexpected error occurred on the server.",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/auth/sign-in": {
            "post": {
                "description": "login",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "SignIn",
                "operationId": "login",
                "parameters": [
                    {
                        "description": "credentials",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handler.LoginInput"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "token",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Invalid credentials.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "An unexpected error occurred on the server.",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/auth/sign-up": {
            "post": {
                "description": "create account",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "SignUp",
                "operationId": "create-account",
                "parameters": [
                    {
                        "description": "account info",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handler.LoginInput"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "User successfully registered. Returns the id of the created user.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    "400": {
                        "description": "Invalid request or missing required fields.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "409": {
                        "description": "User already exists with the provided email or username.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "An unexpected error occurred on the server.",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "handler.LoginInput": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            }
        },
        "models.Comment": {
            "type": "object",
            "properties": {
                "body": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "post_id": {
                    "type": "integer"
                },
                "user_id": {
                    "type": "integer"
                }
            }
        },
        "models.Post": {
            "type": "object",
            "properties": {
                "body": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "title": {
                    "type": "string"
                },
                "user_id": {
                    "type": "integer"
                }
            }
        },
        "models.UpdateCommentInput": {
            "type": "object",
            "properties": {
                "body": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                }
            }
        },
        "models.UpdatePostInput": {
            "type": "object",
            "properties": {
                "body": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                }
            }
        }
    },
    "securityDefinitions": {
        "ApiKeyAuth": {
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}